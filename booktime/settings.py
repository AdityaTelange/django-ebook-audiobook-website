"""
Django settings for booktime project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from envgetter import get_env_variable

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = get_env_variable(BASE_DIR, 'SECRET_KEY')
DEBUG = True
ALLOWED_HOSTS = ['booktime.glitch.me', '127.0.0.1']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main.apps.MainConfig',
    'ebook.apps.EbookConfig',
    'audiobook.apps.AudiobookConfig',
    # 'django_tables2'
    'welut',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'main.middlewares.basket_middleware',

]

ROOT_URLCONF = 'booktime.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR + '/templates/'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'booktime.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST_USER = get_env_variable(BASE_DIR, 'SMTP_USER')
    EMAIL_HOST = get_env_variable(BASE_DIR, 'SMTP_HOST')
    EMAIL_PORT = int(get_env_variable(BASE_DIR, 'SMTP_PORT'))
    EMAIL_USE_TLS = True
    EMAIL_HOST_PASSWORD = get_env_variable(BASE_DIR, 'SMTP_PASS')
else:
    EMAIL_BACKEND = (
        "django.core.mail.backends.console.EmailBackend")

AUTH_USER_MODEL = "main.User"

# FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

# welut
WELUT_EXTENSIONS = ['.pdf', '.epub', '.mobi']  # support file extensions
WELUT_REMOVED_EXTENSIONS = ['.pdf', '.epub', '.mobi']  # file to remove after uploaded
WELUT_IMAGES_EXTENSION = '.png'  # format images extension

# audio
AUDIO_EXTENTIONS = ['.mp3', '.avi', '.wav']  # support file extensions

GATED_CONTENT = (
    '/media/',
)

MIDDLEWARE_CLASSES = (
    # Out of the box middleware...blah blah
    'main.middlewares.GatedContent',
)
